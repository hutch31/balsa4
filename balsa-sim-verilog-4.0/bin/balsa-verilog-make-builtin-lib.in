#! /bin/sh
#
#	The Balsa Asynchronous Hardware Synthesis System
#	Copyright (C) 1995-2003 Department of Computer Science
#	The University of Manchester, Oxford Road, Manchester, UK, M13 9PL
#	
#	This program is free software; you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation; either version 2 of the License, or
#	(at your option) any later version.
#	
#	This program is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#	
#	You should have received a copy of the GNU General Public License
#	along with this program; if not, write to the Free Software
#	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
#	`balsa-make-verilog-builtin-lib'
#	Turn a bunch of builtin function libs into a single lib for use in a
#   Verilog simulator
#	@configure_input@
#
#	$Id: balsa-verilog-make-builtin-lib.in,v 1.7 2004/04/11 18:59:30 janinl Exp $
#

BALSAINSTALLEDHOME=@prefix@
if [ "${BALSAHOME}" = "" ]; then
	BALSAHOME=${BALSAINSTALLEDHOME}
fi
PATH=${BALSAHOME}:${PATH}

if [ $# -lt 1 ]; then
	balsa-prog-banner balsa-verilog-make-builtin-lib 'balsa-verilog-make-builtin-lib: Verilog builtin function lib. generator' \
		'2003, The University of Manchester'
	echo "version @VERSION@"
	echo 'usage: balsa-verilog-make-builtin-lib [ <switches> ] <libname> ( <c-files> )+'
	echo
	echo 'switches: -i <rel-path> - compile inside the uninstalled Balsa package. <rel-path> is a relative path'
	echo '                          to the top of the package'
	echo '          -j <dir>      - install in the named directory' 
	echo '          -s [vcs|cds|vxl|ncv|icarus|modelsim|cver] - which specific simulator to link for'
	echo '          -B <breezefile> - Breeze file corresponding to given netlist'
	echo '          -I <dir>        - Breeze import path component'
	echo
	exit 1
fi

IMPORTPATH=
INSTALLDIR=${PWD}
BREEZEFILE=

switch=yes
while [ "${switch}" = "yes" ]; do
	switch=no

	if [ "$1" = "-i" ]; then
		shift
		RELPATH=$1
		shift
		switch=yes
	elif [ "$1" = "-j" ]; then
		shift
		INSTALLDIR=$1
		shift
		switch=yes
	elif [ "$1" = "-s" ]; then
		shift
		SIMULATOR="$1"
		shift
		switch=yes
	elif [ "$1" = "-B" ]; then
		shift
		BREEZEFILE=$1
		shift
		switch=yes
	elif [ "$1" = "-I" ]; then
		shift
		IMPORTPATH="${IMPORTPATH} -I $1"
		shift
		switch=yes
	fi
done

# Set libtool and install(1) path depending on where we're running this script
if [ -n "${RELPATH}" ]; then
	if [ -x ${RELPATH}/balsa-libtool ]; then
		LIBTOOL=${RELPATH}/balsa-libtool
		INSTALL=${RELPATH}/balsa-install-sh
	else
		LIBTOOL=${RELPATH}/libtool
		INSTALL=${RELPATH}/install-sh
	fi
else
	if [ -x ${BALSAHOME}/bin/balsa-libtool ]; then
		LIBTOOL=${BALSAHOME}/bin/balsa-libtool
		INSTALL=${BALSAHOME}/bin/balsa-install-sh
	else
		LIBTOOL=${BALSAHOME}/bin/libtool
		INSTALL=${BALSAHOME}/bin/install-sh
	fi
fi

if [ -z "${BREEZEFILE}" ]; then
	echo balsa-verilog-make-builtin-lib: no Breeze file named, so can\'t determine which builtins are needed
	BUILTINLIBS=
else
	BUILTINLIBS=`balsa-list-builtins ${IMPORTPATH} "${BREEZEFILE}" | sed 's/$/.la/'`
fi

LIBNAME=$1
shift

LIBOBJS=" \
	${BUILTINLIBS} \
	$* \
	"
SIMLIBOBJS="\
	${BALSAHOME}/lib/libbalsasimverilog_${SIMULATOR}.la \
	${BALSAHOME}/lib/libbalsasim.la \
	${BALSAHOME}/lib/libformat.la \
	"

# make the function that does the registrations.
cat > ${LIBNAME}.c <<EOF
/* WARNING This file is automatically generated by balsa-verilog-make-builtin-lib */

extern void bootstrap (void);
void (*vlog_startup_routines[]) (void) = { (void (*)()) bootstrap, 0 };

EOF

for f in ${LIBOBJS} ; do
	if [ -r $f ] ; then
		dir=`dirname $f`
		file=`basename $f .la`
		@NM@ -g ${dir}/${file}.a | \
			sed -n -e 's/^.*\(BalsaSim_BuiltinLibrary_[a-zA-Z_][a-zA-Z_0-9]*\).*$/extern void \1 (void)\;/p' >>${LIBNAME}.c
    fi
done

cat >> ${LIBNAME}.c <<EOF

void BalsaSimRegisterAllFunctions (void)
{
EOF

for f in ${LIBOBJS} ; do
	if [ -r $f ] ; then
		dir=`dirname $f`
		file=`basename $f .la`
		@NM@ -g ${dir}/${file}.a | \
			sed -n -e 's/^.*\(BalsaSim_BuiltinLibrary_[a-zA-Z_][a-zA-Z_0-9]*\).*$/    \1 ()\;/p' >>${LIBNAME}.c
    fi
done

cat >>${LIBNAME}.c <<EOF
}
EOF

case ${SIMULATOR} in
	icarus)
		if [ -n "@icarus_libs_dir@" ]; then
			EXTRALIBS="-L@icarus_libs_dir@ -lveriuser -lvpi"
		else
			EXTRALIBS="-lveriuser -lvpi"
		fi
		;;
esac

${LIBTOOL} --mode=compile @CC@ -c @CFLAGS@ -o ${LIBNAME}.lo ${LIBNAME}.c &&
${LIBTOOL} --mode=link @CC@ -c @CFLAGS@ -avoid-version -rpath ${INSTALLDIR} -o ${LIBNAME}.la \
	${LIBNAME}.lo ${LIBOBJS} ${SIMLIBOBJS} ${EXTRALIBS} -module &&
install -d ${INSTALLDIR} &&
${LIBTOOL} --mode=install ${INSTALL} -c ${LIBNAME}.la ${INSTALLDIR} &&
${LIBTOOL} --mode=finish ${INSTALLDIR}
